name: CI - Spring Boot Build, Test & Run Container

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    name: Build, Test and Run Docker Image
    runs-on: self-hosted

    steps:
      # 1️⃣ Checkout do código fonte
      - name: Checkout code
        uses: actions/checkout@v4

      # 2️⃣ Configuração do Java 21
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: 'maven'

      # 3️⃣ Build e testes da aplicação
      - name: Build and Test with Maven
        run: mvn -B clean package

      - name: Install pass and docker-credential-pass
        run: |
          sudo apt-get update
          sudo apt-get install -y pass docker-credential-pass

      # 4️⃣ Build da imagem Docker
      - name: Build Docker Image
        run: |
          IMAGE_NAME=localhost/challengeone-image:1.0
          docker build -t $IMAGE_NAME .

      # 3️⃣ Importa a imagem para o MicroK8s
      - name: Import image to MicroK8s
        run: |
          IMAGE_NAME=localhost/challengeone-image:1.0
          docker save $IMAGE_NAME | microk8s ctr image import -

      # 4️⃣ Verifica se a imagem foi importada corretamente
      - name: Check MicroK8s images
        run: |
          microk8s ctr images ls | grep challengeone || (echo "Image not found!" && exit 1)

      # 5️⃣ Aplica os manifests do Kubernetes
      - name: Apply Kubernetes manifests
        run: |
          microk8s kubectl apply -f k8s/

      # 6️⃣ Confirma se o deploy foi iniciado corretamente
      - name: Check deployment status
        run: |
          microk8s kubectl rollout status deployment/challengeone-deployment
name: CI - Spring Boot Build, Test, Push & Deploy with Terraform

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:
    name: Build, Test, Push Image & Deploy Infra
    runs-on: self-hosted

    env:
      IMAGE_NAME: ${{ secrets.DOCKERHUB_USERNAME }}/challengeone
      IMAGE_TAG: 1.0
      TERRAFORM_DIR: infra/

    steps:
      # 1Ô∏è‚É£ Checkout do c√≥digo fonte
      - name: Checkout code
        uses: actions/checkout@v4

      # 2Ô∏è‚É£ Configura√ß√£o do Java 21
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      # 3Ô∏è‚É£ Cache Maven para acelerar builds
      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.m2/repository
          key: maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            maven-

      # 3Ô∏è‚É£ Build e testes do projeto
      - name: Build and Test with Maven
        run: mvn -B clean package

      # üîÑ Reset Docker config para evitar erro com 'docker-credential-pass'
      - name: Reset Docker config
        run: |
         mkdir -p ~/.docker
         echo '{}' > ~/.docker/config.json

      # 4Ô∏è‚É£ Login no Docker Hub
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # 5Ô∏è‚É£ Build e push da imagem Docker
      - name: Build and Push Docker Image
        run: |
          docker build -t $IMAGE_NAME:$IMAGE_TAG .
          docker push $IMAGE_NAME:$IMAGE_TAG
          docker tag $IMAGE_NAME:$IMAGE_TAG $IMAGE_NAME:latest
          docker push $IMAGE_NAME:latest

      # 6Ô∏è‚É£ Provisionamento de Infra com Terraform
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.9.7

      - name: Terraform Init
        working-directory: ${{ env.TERRAFORM_DIR }}
        run: terraform init

      - name: Terraform Apply
        working-directory: ${{ env.TERRAFORM_DIR }}
        run: terraform apply -auto-approve